# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := libmbedcrypto
DEFS_Debug := \
	'-DMBEDTLS_CONFIG_FILE="node-mbedtls-config.h"' \
	'-DLTC_EASY=1' \
	'-DLTC_DER=1' \
	'-DNAPI_CPP_EXCEPTIONS=1' \
	'-DNODE_GYP_MODULE_NAME=libmbedcrypto' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-fvisibility=hidden \
	-mmacosx-version-min=10.15 \
	-arch \
	arm64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++17 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I$(srcdir)/mbedtls/include \
	-I$(srcdir)/configs \
	-I$(srcdir)/mbedtls/include/mbedtls \
	-I$(srcdir)/crypt/headers \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/include/node \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/src \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/openssl/config \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/openssl/openssl/include \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/uv/include \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/zlib \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/v8/include

DEFS_Release := \
	'-DMBEDTLS_CONFIG_FILE="node-mbedtls-config.h"' \
	'-DLTC_EASY=1' \
	'-DLTC_DER=1' \
	'-DNAPI_CPP_EXCEPTIONS=1' \
	'-DNODE_GYP_MODULE_NAME=libmbedcrypto' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-fvisibility=hidden \
	-mmacosx-version-min=10.15 \
	-arch \
	arm64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++17 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I$(srcdir)/mbedtls/include \
	-I$(srcdir)/configs \
	-I$(srcdir)/mbedtls/include/mbedtls \
	-I$(srcdir)/crypt/headers \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/include/node \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/src \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/openssl/config \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/openssl/openssl/include \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/uv/include \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/zlib \
	-I/Users/ryanwilson/Library/Caches/node-gyp/18.16.1/deps/v8/include

OBJS := \
	$(obj).target/$(TARGET)/mbedtls/library/aes.o \
	$(obj).target/$(TARGET)/mbedtls/library/aesni.o \
	$(obj).target/$(TARGET)/mbedtls/library/arc4.o \
	$(obj).target/$(TARGET)/mbedtls/library/aria.o \
	$(obj).target/$(TARGET)/mbedtls/library/asn1parse.o \
	$(obj).target/$(TARGET)/mbedtls/library/asn1write.o \
	$(obj).target/$(TARGET)/mbedtls/library/base64.o \
	$(obj).target/$(TARGET)/mbedtls/library/bignum.o \
	$(obj).target/$(TARGET)/mbedtls/library/blowfish.o \
	$(obj).target/$(TARGET)/mbedtls/library/camellia.o \
	$(obj).target/$(TARGET)/mbedtls/library/ccm.o \
	$(obj).target/$(TARGET)/mbedtls/library/chacha20.o \
	$(obj).target/$(TARGET)/mbedtls/library/chachapoly.o \
	$(obj).target/$(TARGET)/mbedtls/library/cipher.o \
	$(obj).target/$(TARGET)/mbedtls/library/cipher_wrap.o \
	$(obj).target/$(TARGET)/mbedtls/library/cmac.o \
	$(obj).target/$(TARGET)/mbedtls/library/ctr_drbg.o \
	$(obj).target/$(TARGET)/mbedtls/library/des.o \
	$(obj).target/$(TARGET)/mbedtls/library/dhm.o \
	$(obj).target/$(TARGET)/mbedtls/library/ecdh.o \
	$(obj).target/$(TARGET)/mbedtls/library/ecdsa.o \
	$(obj).target/$(TARGET)/mbedtls/library/ecjpake.o \
	$(obj).target/$(TARGET)/mbedtls/library/ecp.o \
	$(obj).target/$(TARGET)/mbedtls/library/ecp_curves.o \
	$(obj).target/$(TARGET)/mbedtls/library/entropy.o \
	$(obj).target/$(TARGET)/mbedtls/library/entropy_poll.o \
	$(obj).target/$(TARGET)/mbedtls/library/error.o \
	$(obj).target/$(TARGET)/mbedtls/library/gcm.o \
	$(obj).target/$(TARGET)/mbedtls/library/havege.o \
	$(obj).target/$(TARGET)/mbedtls/library/hkdf.o \
	$(obj).target/$(TARGET)/mbedtls/library/hmac_drbg.o \
	$(obj).target/$(TARGET)/mbedtls/library/md.o \
	$(obj).target/$(TARGET)/mbedtls/library/md2.o \
	$(obj).target/$(TARGET)/mbedtls/library/md4.o \
	$(obj).target/$(TARGET)/mbedtls/library/md5.o \
	$(obj).target/$(TARGET)/mbedtls/library/md_wrap.o \
	$(obj).target/$(TARGET)/mbedtls/library/memory_buffer_alloc.o \
	$(obj).target/$(TARGET)/mbedtls/library/nist_kw.o \
	$(obj).target/$(TARGET)/mbedtls/library/oid.o \
	$(obj).target/$(TARGET)/mbedtls/library/padlock.o \
	$(obj).target/$(TARGET)/mbedtls/library/pem.o \
	$(obj).target/$(TARGET)/mbedtls/library/pk.o \
	$(obj).target/$(TARGET)/mbedtls/library/pk_wrap.o \
	$(obj).target/$(TARGET)/mbedtls/library/pkcs12.o \
	$(obj).target/$(TARGET)/mbedtls/library/pkcs5.o \
	$(obj).target/$(TARGET)/mbedtls/library/pkparse.o \
	$(obj).target/$(TARGET)/mbedtls/library/pkwrite.o \
	$(obj).target/$(TARGET)/mbedtls/library/platform.o \
	$(obj).target/$(TARGET)/mbedtls/library/platform_util.o \
	$(obj).target/$(TARGET)/mbedtls/library/poly1305.o \
	$(obj).target/$(TARGET)/mbedtls/library/ripemd160.o \
	$(obj).target/$(TARGET)/mbedtls/library/rsa.o \
	$(obj).target/$(TARGET)/mbedtls/library/rsa_internal.o \
	$(obj).target/$(TARGET)/mbedtls/library/sha1.o \
	$(obj).target/$(TARGET)/mbedtls/library/sha256.o \
	$(obj).target/$(TARGET)/mbedtls/library/sha512.o \
	$(obj).target/$(TARGET)/mbedtls/library/threading.o \
	$(obj).target/$(TARGET)/mbedtls/library/timing.o \
	$(obj).target/$(TARGET)/mbedtls/library/version.o \
	$(obj).target/$(TARGET)/mbedtls/library/version_features.o \
	$(obj).target/$(TARGET)/mbedtls/library/xtea.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-mmacosx-version-min=10.15 \
	-arch \
	arm64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug :=

LDFLAGS_Release := \
	-mmacosx-version-min=10.15 \
	-arch \
	arm64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release :=

LIBS :=

$(builddir)/mbedcrypto.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/mbedcrypto.a: LIBS := $(LIBS)
$(builddir)/mbedcrypto.a: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/mbedcrypto.a: TOOLSET := $(TOOLSET)
$(builddir)/mbedcrypto.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(builddir)/mbedcrypto.a
# Add target alias
.PHONY: libmbedcrypto
libmbedcrypto: $(builddir)/mbedcrypto.a

# Add target alias to "all" target.
.PHONY: all
all: libmbedcrypto

# Add target alias
.PHONY: libmbedcrypto
libmbedcrypto: $(builddir)/mbedcrypto.a

# Short alias for building this static library.
.PHONY: mbedcrypto.a
mbedcrypto.a: $(builddir)/mbedcrypto.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/mbedcrypto.a

